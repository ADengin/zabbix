# version - 0.1a
# Add host to zabbix Server via API
# Anatolii Dienhin
# anatoliydengin@gmail.com

import requests
import json
import socket

# -- Dict config
config = {}

# -- –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –¥–∞–Ω—ñ –¥–æ—Å—Ç—É–ø—É –¥–æ —Å–∏—Å—Ç–µ–º–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
with open("access.txt", "r", encoding="utf-8") as file:
    for line in file:
        line = line.strip()
        if line.startswith("#") or not line:  # –Ü–≥–Ω–æ—Ä—É—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ —Ç–∞ –ø–æ—Ä–æ–∂–Ω—ñ —Ä—è–¥–∫–∏
            continue
        key, value = line.split("=", 1)  # –î—ñ–ª–∏–º–æ –ª–∏—à–µ –ø–æ –ø–µ—Ä—à–æ–º—É "="
        config[key.strip()] = value.strip().strip('"')  # –í–∏–¥–∞–ª—è—î–º–æ –ø—Ä–æ–±—ñ–ª–∏ —Ç–∞ –ª–∞–ø–∫–∏

# -- –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—é –≤—É–∑–ª–∞ –¥–æ —Å–∏—Å—Ç–µ–º–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
with open("for_zabbix.txt", "r", encoding="utf-8") as file:
        for line in file:
            line = line.strip()
            if line.startswith("#") or not line:  # –Ü–≥–Ω–æ—Ä—É—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ —Ç–∞ –ø–æ—Ä–æ–∂–Ω—ñ —Ä—è–¥–∫–∏
                continue
            key, value = line.split("=", 1)  # –î—ñ–ª–∏–º–æ –ª–∏—à–µ –ø–æ –ø–µ—Ä—à–æ–º—É "="
            config[key.strip()] = value.strip().strip('"')  # –í–∏–¥–∞–ª—è—î–º–æ –ø—Ä–æ–±—ñ–ª–∏ —Ç–∞ –ª–∞–ø–∫–∏

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Zabbix ===
ZABBIX_URL = config["ZABBIX_URL"]
ZABBIX_TOKEN = config["ZABBIX_AUTH_TOKEN"]

# === –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–º—ñ–Ω–∏–Ω–∏—Ö –ø—Ä–æ –≤—É–∑–æ–ª –¥–ª—è Zabbix ===
ip = requests.get('https://api.ipify.org').content.decode('utf8')

# === –î–∞–Ω—ñ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤—É–∑–ª–∞ ===
visibl = config["visible_name"]
if not visibl:
    visibl = input("–ö–æ–º–ø–∞–Ω—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É –Ω–∞–∑–≤—É –∫–æ–º–ø–∞—ñ—ó: ")
host_name = socket.gethostname()  # –Ü–º'—è –≤—É–∑–ª–∞
visible_name = f"{visibl}Windows.RDS.Server.uCloud.NOT-AO"  # –í–∏–¥–∏–º–µ —ñ–º'—è (–≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è —É Zabbix UI)
group_id = config["group_id"]  # ID –≥—Ä—É–ø–∏ 
template_id = config["template_id"]  # ID —à–∞–±–ª–æ–Ω—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "Template OS Linux")
ip_address = ip  # IP –≤—É–∑–ª–∞

# === –ó–∞–ø–∏—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—É–∑–ª–∞ ===
payload = {
    "jsonrpc": "2.0",
    "method": "host.create",
    "params": {
        "host": host_name,
        "name": visible_name,  
        "interfaces": [
            {
                "type": 1,  # 1 = Zabbix Agent
                "main": 1,
                "useip": 1,
                "ip": ip_address,
                "dns": "",
                "port": "10050"
            }
        ],
        "groups": [{"groupid": group_id}],
        "templates": [{"templateid": template_id}]
    },
    "auth": ZABBIX_TOKEN,  # üõ† –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API-—Ç–æ–∫–µ–Ω
    "id": 1
}

response = requests.post(ZABBIX_URL, json=payload, headers={"Content-Type": "application/json"})
result = response.json()

if "result" in result:
    print(f"‚úÖ –í—É–∑–æ–ª '{host_name}' —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π! (ID: {result['result']['hostids'][0]})")
else:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {result}")
